include $(BASEMAKEPATH)/Makefile

DEFENVFILE?=$(ROOT)/make/env/$(DC)-default.mk
ENVFILE?=$(ROOT)/make/env/$(DC)-$(ENV).mk

GROUP ?= northstar
TS_ENV ?= $(ENV)
DKT_ENV ?= $(ENV)
TS_GROUP ?= ts
DOCKER_USER ?= mydocker
LOGGING_GROUP ?= northstar
BUILD_ENV ?= dev
BASE_COMPILE_DIR?=$(PWD)
FILEPATH?=config/$(BUILD_ENV)-env.sh
DATACENTER_NAME?=$(DC)$(ENV)

ifneq ("$(wildcard $(ENVFILE))","")
	include $(ENVFILE)
else
	include $(DEFENVFILE)
endif

ifeq ($(CASS_STORE_DC), true)
        CASS_MESOS_DNS_SUFIX =$(STORE_DC_MESOS_DNS_SUFIX)
else
        CASS_MESOS_DNS_SUFIX =$(MESOS_DNS_SUFIX)
endif

ifeq ($(LOG_BASE_DC), true)
        LOG_MESOS_DNS_SUFIX =$(LOG_DC_MESOS_DNS_SUFIX)
else
        LOG_MESOS_DNS_SUFIX =$(MESOS_DNS_SUFIX)
endif

ifeq ($(USE_COMMON_LOGGING_PIPELINE),1)
COMMON_MESOS_DNS_SUFIX ?= $(MESOS_DNS_SUFIX)
LOGGER_ZOOKEEPER_CLUSTER_NODES := 5
LOGGER_ZOOKEEPER_ID_LIST :=$(shell for i in {1..$(LOGGER_ZOOKEEPER_CLUSTER_NODES)};do echo $$i; done )
LOGGER_ZOOKEEPER_MESOS_DNS :=$(foreach var, $(LOGGER_ZOOKEEPER_ID_LIST),zookeeper$(var)-log-$(LOGGING_GROUP).$(COMMON_MESOS_DNS_SUFIX):2181)
LOGGER_ZOOKEEPER_MESOS_DNS :=$(subst $(space),$(comma),$(LOGGER_ZOOKEEPER_MESOS_DNS))
LOGGER_ZOOKEEPER_HOST_PORT :=$(LOGGER_ZOOKEEPER_MESOS_DNS)
LOGGER_KAFKA_CLUSTER_NODES := 10
LOGGER_KAFKA_ID_LIST :=$(shell for i in {1..$(LOGGER_KAFKA_CLUSTER_NODES)};do echo $$i; done )
LOGGER_KAFKA_MESOS_DNS :=$(foreach var, $(LOGGER_KAFKA_ID_LIST),kafka$(var)-log-$(LOGGING_GROUP).$(COMMON_MESOS_DNS_SUFIX):9092)
LOGGER_KAFKA_MESOS_DNS :=$(subst $(space),$(comma),$(LOGGER_KAFKA_MESOS_DNS))
LOGGER_KAFKA_BROKERS_HOST_PORT :=$(LOGGER_KAFKA_MESOS_DNS)
LOGGER_CASSANDRA_CLUSTER_NODES := 10
LOGGER_CASSANDRA_ID_LIST :=$(shell for i in {1..$(LOGGER_CASSANDRA_CLUSTER_NODES)};do echo $$i; done )
LOGGER_CASSANDRA_MESOS_DNS :=$(foreach var, $(LOGGER_CASSANDRA_ID_LIST),cassandra$(var)-log-$(LOGGING_GROUP).$(COMMON_MESOS_DNS_SUFIX))
LOGGER_CASSANDRA_MESOS_DNS :=$(subst $(space),$(comma),$(LOGGER_CASSANDRA_MESOS_DNS))
LOGGER_CASSANDRA_HOST :=$(LOGGER_CASSANDRA_MESOS_DNS)
LOGGER_CASSANDRA_PORT := 9042
LOGGER_CASSANDRA_PROTO_VERSION := 4
LOGGER_CASSANDRA_CQL_VERSION := 3.4.0
LOGGER_CASSANDRA_CLUSTER_RF := 3
LOGGER_NUM_PARTITIONS := 20
DKT_LOGCONSUMER_CASSANDRA_RETENTION_PERIOD_LOGOUT := 129600
DKT_LOGCONSUMER_CASSANDRA_RETENTION_PERIOD_LOGERR := 129600
DKT_LOGCONSUMER_CASSANDRA_RETENTION_PERIOD_STATS := 129600
LOGGER_CASSANDRA_HOST_PORT :=$(LOGGER_CASSANDRA_MESOS_DNS)
else

LOGGER_CASSANDRA_CLUSTER_NODES ?= 1
LOGGER_CASSANDRA_PORT ?= 9042
LOGGER_CASSANDRA_PROTO_VERSION ?= 4
LOGGER_CASSANDRA_CQL_VERSION ?= 3.4.0
LOGGER_CASSANDRA_CLUSTER_RF ?= 1
LOGGER_NUM_PARTITIONS ?= 2
DKT_LOGCONSUMER_CASSANDRA_RETENTION_PERIOD_LOGOUT ?= 28800
DKT_LOGCONSUMER_CASSANDRA_RETENTION_PERIOD_LOGERR ?= 28800
DKT_LOGCONSUMER_CASSANDRA_RETENTION_PERIOD_STATS ?= 28800

ifeq ($(USE_PROD_LOGGING),true)
	LOGGER_ZOOKEEPER_ID_LIST :=$(shell for i in {1..$(LOGGER_ZOOKEEPER_CLUSTER_NODES)};do echo $$i; done )
	LOGGER_ZOOKEEPER_MESOS_DNS :=$(foreach var, $(LOGGER_ZOOKEEPER_ID_LIST),zookeeper$(var)-log-$(ENV)-$(LOGGING_GROUP).$(LOG_MESOS_DNS_SUFIX):2181)
	LOGGER_ZOOKEEPER_MESOS_DNS :=$(subst $(space),$(comma),$(LOGGER_ZOOKEEPER_MESOS_DNS))
	LOGGER_ZOOKEEPER_HOST_PORT :=$(LOGGER_ZOOKEEPER_MESOS_DNS)
	LOGGER_ZOOKEEPER_CLUSTER_CONFIGS :=$(foreach var, $(LOGGER_ZOOKEEPER_ID_LIST),$(var):zookeeper$(var)-log-$(ENV)-$(LOGGING_GROUP).$(LOG_MESOS_DNS_SUFIX))
    LOGGER_ZOOKEEPER_CLUSTER_CONFIGS :=$(subst $(space),$(comma),$(LOGGER_ZOOKEEPER_CLUSTER_CONFIGS))
	ifeq ($(LOGGER_KAFKA_INS_APP), true)
		LOGGER_KAFKA_ID_LIST :=$(shell for i in {1..$(LOGGER_KAFKA_CLUSTER_NODES)};do echo $$i; done )
		LOGGER_KAFKA_MESOS_DNS :=$(foreach var, $(LOGGER_KAFKA_ID_LIST),kafka$(var)-log-$(ENV)-$(LOGGING_GROUP).$(LOG_MESOS_DNS_SUFIX):9092)
		LOGGER_KAFKA_MESOS_DNS :=$(subst $(space),$(comma),$(LOGGER_KAFKA_MESOS_DNS))
		LOGGER_KAFKA_BROKERS_HOST_PORT :=$(LOGGER_KAFKA_MESOS_DNS)
	else
		LOGGER_KAFKA_MESOS_DNS :=kafka-log-$(ENV)-$(GROUP).$(LOG_MESOS_DNS_SUFIX)
		LOGGER_KAFKA_BROKERS_HOST_PORT :=$(LOGGER_KAFKA_MESOS_DNS):9092
	endif
	LOGGER_CASSANDRA_ID_LIST :=$(shell for i in {1..$(LOGGER_CASSANDRA_CLUSTER_NODES)};do echo $$i; done )
	LOGGER_CASSANDRA_MESOS_DNS_PORT :=$(foreach var, $(LOGGER_CASSANDRA_ID_LIST),cassandra$(var)-log-$(ENV)-$(LOGGING_GROUP).$(CASS_MESOS_DNS_SUFIX):9042)
	LOGGER_CASSANDRA_MESOS_DNS_PORT :=$(subst $(space),$(comma),$(LOGGER_CASSANDRA_MESOS_DNS))
	LOGGER_CASSANDRA_MESOS_DNS :=$(foreach var, $(LOGGER_CASSANDRA_ID_LIST),cassandra$(var)-log-$(ENV)-$(LOGGING_GROUP).$(CASS_MESOS_DNS_SUFIX))
	LOGGER_CASSANDRA_MESOS_DNS :=$(subst $(space),$(comma),$(LOGGER_CASSANDRA_MESOS_DNS))
else
	LOGGER_NUM_PARTITIONS := $(NUM_PARTITIONS)
	LOGGER_ZOOKEEPER_HOST_PORT :=$(ZOOKEEPER_HOST_PORT)
	LOGGER_KAFKA_BROKERS_HOST_PORT := $(KAFKA_BROKERS_HOST_PORT)
	LOGGER_CASSANDRA_MESOS_DNS := $(CASSANDRA_MESOS_DNS)


endif
LOGGER_CASSANDRA_HOST_PORT :=$(LOGGER_CASSANDRA_MESOS_DNS_PORT)
LOGGER_CASSANDRA_HOST :=$(LOGGER_CASSANDRA_MESOS_DNS)
endif

ifeq ($(DCOS_KAFKA_FRAMEWORK_USE_CUSTOM_ZK), true)
	ZOOKEEPER_HOST_PORT := master.mesos:2181
endif

ifeq ($(DCOS_CASSANDRA_FRAMEWORK_USE_CUSTOM_ZK), true)
	ZOOKEEPER_HOST_PORT := master.mesos:2181
endif

ifeq ($(DCOS_KAFKA_FRAMEWORK), true)
	KAFKA_ZK_PATH := "/dcos-service-$(GROUP)-$(ENV)-kafka"
endif

KAFKA_ZK_URL := $(ZOOKEEPER_HOST_PORT)$(KAFKA_ZK_PATH)
DOCKER_REGISTRY_IP_PORT_USER := $(DOCKER_REGISTRY_IP_PORT)/$(DOCKER_USER)

# Ports
DEFAULT_CONTAINER_PORT := 80
CASSANDRA_NGINX_PORT := $(DEFAULT_CONTAINER_PORT)
KAFKA_NGINX_PORT := $(DEFAULT_CONTAINER_PORT)
DATA_PORT := $(DEFAULT_CONTAINER_PORT)
PROCESSING_PORT := $(DEFAULT_CONTAINER_PORT)
KAFKA_MNGR_PORT := $(DEFAULT_CONTAINER_PORT)
CRON_PORT := $(DEFAULT_CONTAINER_PORT)
RTE_LUA_PORT := $(DEFAULT_CONTAINER_PORT)
OBJECT_PORT := $(DEFAULT_CONTAINER_PORT)
DPE_STREAM_PORT := $(DEFAULT_CONTAINER_PORT)
DPE_SPARK_PORT := 5000
THINGSPACE_PORT := 8088
THINGSPACE_AUTH_PORT := 8088
THINGSPACE_SOUTH_PORT := 80

PORTAL_PORT := 8080
NORTHSTARAPI_PORT := 8080
NSSIM_PORT := 8080
NS_AUTH_PORT := 8080

# Spark
DPE_SPARK_HOST_PORT := dpe-spark-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):$(DPE_SPARK_PORT)

# Streaming
DPE_STREAM_HOST_PORT := dpe-stream-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):$(DPE_STREAM_PORT)

# Object
OBJECT_HOST_PORT := object-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):$(OBJECT_PORT)

# Data
DATA_HOST_PORT := data-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):$(DATA_PORT)

# Kafka Mngr
KAFKA_MNGR_HOST_PORT := kafkamngr-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):$(KAFKA_MNGR_PORT)

# Cron
CRON_HOST_PORT := cron-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):$(CRON_PORT)

# Processing
PROCESSING_HOST_PORT := processing-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):$(PROCESSING_PORT)

# NS Auth Services
THINGSPACE_AUTH_MESOS_DNS :=auth-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX)
THINGSPACE_AUTH_HOST_PORT :=$(THINGSPACE_AUTH_MESOS_DNS):$(NS_AUTH_PORT)

# NS Auth Services
THINGSPACE_SOUTH_MESOS_DNS :=auth-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX)
THINGSPACE_SOUTH_HOST_PORT :=$(THINGSPACE_SOUTH_MESOS_DNS):$(NS_AUTH_PORT)

# NS Auth Services
THINGSPACE_USER_MESOS_DNS :=auth-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX)
THINGSPACE_USER_HOST_PORT :=$(THINGSPACE_USER_MESOS_DNS):$(NS_AUTH_PORT)

# Portal
PORTAL_MESOS_DNS :=portal-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX)
PORTAL_HOST_PORT :=$(PORTAL_MESOS_DNS):$(PORTAL_PORT)

# Northstar API
NORTHSTARAPI_MESOS_DNS :=northstarapi-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX)
NORTHSTARAPI_HOST_PORT :=$(NORTHSTARAPI_MESOS_DNS):$(NORTHSTARAPI_PORT)

# Northstar Simulator
NSSIM_HOST_PORT := nssim-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):$(NSSIM_PORT)

# Redis
REDIS_MESOS_DNS :=redis-$(ENV)-$(GROUP).$(MESOS_DNS_SUFIX):6379
REDIS_HOST_PORT :=$(REDIS_MESOS_DNS)

marathon: marathon_app
marathon_app: marathon_base
	@echo "\033[0;34mcreating => \033[0;32m$(MARATHON_TARGET)\033[0m"
	@sed \
		-e s#@ENV@#$(ENV)# \
		-e s#@DC@#$(DC)# \
		-e s#@GROUP@#$(GROUP)# \
		-e s#@APP@#$(APP)# \
		-e s#@MON_GROUP@#$(GROUP)# \
		-e s#@MON_APP@#$(APP)# \
		-e s#@CONTACT@#$(CONTACT)# \
		-e s#@MARATHON_IMAGE@#$(MARATHON_IMAGE)# \
		-e s#@APPID@#$(APPID)# \
		-e s#@MARATHON_BASE_URL@#$(MARATHON_BASE_URL)# \
		-e s#@MARATHON_USERNAME@#$(MARATHON_USERNAME)# \
		-e s#@MARATHON_PASSWORD@#$(MARATHON_PASSWORD)# \
		-e s#@HOST@#$(HOST)# \
		-e s#@MAX_MEMORY@#$(MAX_MEMORY)# \
		-e s#@GOMAXPROCS@#$(MAX_CPUS)# \
		-e s#@DOCKER_REGISTRY_IP_PORT_USER@#$(DOCKER_REGISTRY_IP_PORT_USER)# \
		-e s#@NUM_INSTANCES@#$(NUM_INSTANCES)# \
		-e s#@NUM_WORKERS@#$(NUM_WORKERS)# \
		-e s#@DATA_PORT@#$(DATA_PORT)# \
		-e s#@DATA_HOST_PORT@#$(DATA_HOST_PORT)# \
		-e s#@TLS_SKIP_VERIFICATION@#$(TLS_SKIP_VERIFICATION)# \
		-e s#@CLIENT_ID@#$(CLIENT_ID)# \
		-e s#@CLIENT_SECRET@#$(CLIENT_SECRET)# \
		-e s#@CRON_PORT@#$(CRON_PORT)# \
		-e s#@CRON_HOST_PORT@#$(CRON_HOST_PORT)# \
		-e s#@OBJECT_PORT@#$(OBJECT_PORT)# \
		-e s#@OBJECT_HOST_PORT@#$(OBJECT_HOST_PORT)# \
		-e s#@OBJECT_BLOB_STORAGE_USER_ID@#$(OBJECT_BLOB_STORAGE_USER_ID)# \
		-e s#@OBJECT_BLOB_STORAGE_USER_SECRET@#$(OBJECT_BLOB_STORAGE_USER_SECRET)# \
		-e s#@BLOB_STORAGE_HOST_AND_PORT@#$(BLOB_STORAGE_HOST_AND_PORT)# \
		-e s#@RTE_LUA_PORT@#$(RTE_LUA_PORT)# \
		-e s#@ENABLE_HTTP@#$(ENABLE_HTTP)# \
		-e s#@ENABLE_NSQL@#$(ENABLE_NSQL)# \
		-e s#@ENABLE_NSFTP@#$(ENABLE_NSFTP)# \
		-e s#@ENABLE_NSSFTP@#$(ENABLE_NSSFTP)# \
		-e s#@ENABLE_NSOUTPUT@#$(ENABLE_NSOUTPUT)# \
		-e s#@ENABLE_NSOBJECT@#$(ENABLE_NSOBJECT)# \
		-e s#@ENABLE_NSSTREAM@#$(ENABLE_NSSTREAM)# \
		-e s#@ENABLE_NSKV@#$(ENABLE_NSKV)# \
		-e s#@DPE_STREAM_PORT@#$(DPE_STREAM_PORT)# \
		-e s#@DPE_STREAM_HOST_PORT@#$(DPE_STREAM_HOST_PORT)# \
		-e s#@DPE_SPARK_HOST_PORT@#$(DPE_SPARK_HOST_PORT)# \
		-e s#@DPE_SPARK_PORT@#$(DPE_SPARK_PORT)# \
		-e s#@DPE_SPARK_CORES_MAX@#$(DPE_SPARK_CORES_MAX)# \
		-e s#@DPE_SPARK_MASTER_CORES@#$(DPE_SPARK_MASTER_CORES)# \
		-e s#@DPE_SPARK_MASTER_JVM_MEM@#$(DPE_SPARK_MASTER_JVM_MEM)# \
		-e s#@DPE_SPARK_WORKER_CORES@#$(DPE_SPARK_WORKER_CORES)# \
		-e s#@DPE_SPARK_WORKER_MEM@#$(DPE_SPARK_WORKER_MEM)# \
		-e s#@PROCESSING_PORT@#$(PROCESSING_PORT)# \
		-e s#@PROCESSING_HOST_PORT@#$(PROCESSING_HOST_PORT)# \
		-e s#@PORTAL_PORT@#$(PORTAL_PORT)# \
		-e s#@PORTAL_HOST_PORT@#$(PORTAL_HOST_PORT)# \
		-e s#@NORTHSTARAPI_PORT@#$(NORTHSTARAPI_PORT)# \
		-e s#@NORTHSTARAPI_HOST_PORT@#$(NORTHSTARAPI_HOST_PORT)# \
		-e s#@NORTHSTARAPI_MAX_ARG_COUNT@#$(NORTHSTARAPI_MAX_ARG_COUNT)# \
		-e s#@NORTHSTARAPI_MAX_TIMEOUT@#$(NORTHSTARAPI_MAX_TIMEOUT)# \
		-e s#@NORTHSTARAPI_MAX_CODE_SIZE@#$(NORTHSTARAPI_MAX_CODE_SIZE)# \
		-e s#@NORTHSTARAPI_ENFORCE_CHECKSUM@#$(NORTHSTARAPI_ENFORCE_CHECKSUM)# \
		-e s#@NORTHSTARAPI_EXECUTION_MEMORY_MAX@#$(NORTHSTARAPI_EXECUTION_MEMORY_MAX)# \
		-e s#@NORTHSTARAPI_EXECUTION_MEMORY_DEFAULT@#$(NORTHSTARAPI_EXECUTION_MEMORY_DEFAULT)# \
		-e s#@NS_NORTHSTARAPI_CONFIGURATION_ENV@#$(NS_NORTHSTARAPI_CONFIGURATION_ENV)# \
		-e s#@DCOS_URL@#$(DCOS_URL)# \
		-e s#@AUTH_TOK@#$(AUTH_TOK)# \
		-e s#@MARATHON_AUTH_TYPE@#$(MARATHON_AUTH_TYPE)# \
		-e s#@MARATHON_AUTH_URL@#$(MARATHON_AUTH_URL)# \
		-e s#@MARATHON_BASE_URL@#$(MARATHON_BASE_URL)# \
		-e s#@DCOS_AUTH_ENABLED@#$(DCOS_AUTH_ENABLED)# \
		-e s#@KAFKA_ZK_PATH@#$(KAFKA_ZK_PATH)# \
		-e s#@KAFKA_ZK_URL@#$(KAFKA_ZK_URL)# \
		-e s#@KAFKA_MNGR_PORT@#$(KAFKA_MNGR_PORT)# \
		-e s#@KAFKA_MNGR_HOST_PORT@#$(KAFKA_MNGR_HOST_PORT)# \
		-e s#@NUM_PARTITIONS@#$(NUM_PARTITIONS)# \
		-e s#@MESOS_ZK_HOST_PORT@#$(MESOS_ZK_HOST_PORT)# \
		-e s#@MESOS_MASTER_HOST_PORT@#$(MESOS_MASTER_HOST_PORT)# \
		-e s#@URIS@#$(URIS)# \
		-e s#@DATACENTER@#$(DATACENTER_NAME)# \
		-e s#@CLUSTER_NAME@#$(CLUSTER_NAME)# \
		-e s#@OPS_MANAGER_APP_ID@#$(OPS_MANAGER_APP_ID)# \
		-e s#@UPGRADE_VERSION@#$(UPGRADE_VERSION)# \
		-e s#@ROLLBACK_VERSION@#$(ROLLBACK_VERSION)# \
		-e s#@ENABLE_DEBUG@#$(ENABLE_DEBUG)# \
		-e s#@DKT_LOGGER_DUMP_MSG_STDOUT@#$(DKT_LOGGER_DUMP_MSG_STDOUT)# \
		-e s#@THINGSPACE_AUTH_MESOS_DNS@#$(THINGSPACE_AUTH_MESOS_DNS)# \
		-e s#@THINGSPACE_AUTH_HOST_PORT@#$(THINGSPACE_AUTH_HOST_PORT)# \
		-e s#@THINGSPACE_USER_MESOS_DNS@#$(THINGSPACE_USER_MESOS_DNS)# \
		-e s#@THINGSPACE_SOUTH_HOST_PORT@#$(THINGSPACE_SOUTH_HOST_PORT)# \
		-e s#@THINGSPACE_USER_HOST_PORT@#$(THINGSPACE_USER_HOST_PORT)# \
		-e s#@NSSIM_HOST_PORT@#$(NSSIM_HOST_PORT)# \
		-e s#@NSSIM_TEST_GROUPS@#$(NSSIM_TEST_GROUPS)# \
		-e s#@REMOVE_DEAD_NODES@#$(REMOVE_DEAD_NODES)# \
		-e s#@LOGGER_REDISOPSMANAGER_MESOS_DNS@#$(LOGGER_REDISOPSMANAGER_MESOS_DNS)# \
		-e s#@ITERATION_DELAY_IN_SEC@#$(ITERATION_DELAY_IN_SEC)# \
		-e s#@USE_DPE_SPARK@#$(USE_DPE_SPARK)# \
		-e s#@LOG_TYPE@#$(LOG_TYPE)# \
		-e s#@ELASTICSEARCH_URLS@#$(ELASTICSEARCH_URLS)# \
         $(MARATHON_APP_TARGET) > $(MARATHON_APP_TARGET_TEMP)
		mv $(MARATHON_APP_TARGET_TEMP) $(MARATHON_APP_TARGET)
		$(JQ_BIN) -s '.[0] * .[1]' $(MARATHON_BASE_TARGET) $(MARATHON_APP_TARGET) > $(MARATHON_TARGET)

	# For bamboo
	cp $(MARATHON_TARGET) $(DEPLOY_DIR)/marathon.$(APP).json
